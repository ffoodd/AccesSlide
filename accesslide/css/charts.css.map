{"version":3,"sources":["_switch.scss","_sseeeedd-vars.scss","_sseeeedd-func.scss","charts.scss"],"names":[],"mappings":"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","file":"charts.css","sourcesContent":["/* ==================== */\n/* == Switch\n/* ==================== */\n\nbutton[role=\"switch\"] {\n  background-color: rgba( palette( dominant, light ), .1 );\n  border-radius: rem( 22 ) !important;\n  box-sizing: content-box;\n  box-shadow: none !important;;\n  color: palette( dominant );\n  font-size: 1rem;\n  height: rem( 44 );\n  line-height: rem( 44 );\n  margin-left: $gutter * 2;\n  padding: 0 $gutter * 3;\n  position: relative;\n  transition: all .3s map-get( $timing-functions, 'enter' );\n  width: rem( 76 );\n  will-change: background-color;\n\n  &::before {\n    background: palette( default, contrast );\n    border-radius: rem( 22 );\n    content: \"\";\n    position: absolute;\n    height: rem( 38 );\n    left: rem( 4 );\n    top: rem( 4 );\n    transform: none;\n    transition: transform .3s map-get( $timing-functions, 'enter' ) 0s;\n    width: rem( 38 );\n    will-change: transform;\n  }\n\n  &:hover,\n  &:focus,\n  &:active {\n    background-color: rgba( palette( dominant, light ), .075 );\n    color: palette( dominant, dark );\n    outline-color: transparent;\n    top: 0;\n  }\n\n  &[aria-checked=\"true\"] {\n    background-color: rgba( palette( success, light ), .3 );\n\n    &::before {\n      background: palette( success, dark );\n      transform: translateX(#{rem( 78 ) + $gutter * 3});\n    }\n  }\n\n  > *:first-child,\n  &[aria-checked=\"true\"] > *:last-child {\n    display: none;\n  }\n\n  &[aria-checked=\"true\"] > *:first-child {\n    display: block;\n  }\n}\n\n@media screen and (-ms-high-contrast: active) {\n  button[role=\"switch\"] {\n    background-color: buttonFace;\n    border: 1px solid currentColor !important;\n    color: buttonText;\n\n    > span {\n      background-color: inherit;\n    }\n\n    &::before {\n      background: currentColor;\n    }\n\n    @supports (--css: var(--iables)) {\n      button[role=\"switch\"][aria-checked=\"true\"] {\n        background-color: highlight;\n        color: highlightText;\n      }\n    }\n  }\n}\n","@charset \"UTF-8\";\n/* ----------------------------- */\n/* Table of contents */\n/* ----------------------------- */\n/*\n  == Paths\n  == Colors\n  == Timing functions\n  == Spacings\n  == Patterns\n  == Formage\n*/\n\n\n/* ==================== */\n/* == Paths\n/* ==================== */\n\n$path: \"../\" !default;\n\n\n/* ==================== */\n/* == Colors\n/* ==================== */\n\n$colors: (\n  dominant: (\n    base: #444,\n    light: mediumblue,\n    dark: black,\n    contrast: white\n  ),\n  secondary: (\n    base: mediumblue,\n    light: deepskyblue,\n    dark: DarkBlue,\n    contrast: white\n  ),\n  accent: (\n    base: rebeccapurple,\n    light: blueviolet,\n    dark: indigo,\n    contrast: white\n  ),\n  muted: (\n    base: gray,\n    light: darkgray,\n    contrast: black\n  ),\n  alert: (\n    base: crimson,\n    dark: firebrick,\n    contrast: white\n  ),\n  success: (\n    base: springgreen,\n    light: palegreen,\n    dark: #01ac49,\n    contrast: #444\n  ),\n  default: (\n    base: dimgray,\n    secondary: whitesmoke,\n    contrast: white\n  )\n);\n\n$blank: str-replace(to-string(palette( accent )), \"#\", \"%23\");\n$blank-focus: str-replace(to-string(palette( accent, dark )), \"#\", \"%23\");\n\n\n/* ==================== */\n/* == Timing functions\n *\n * @note Simple cubic-bezier curves for timing functions\n * @author David K. Piano\n * @link https://twitter.com/DavidKPiano/status/965704092545900544\n/* ==================== */\n\n$timing-functions: (\n  enter: cubic-bezier(0, .5, .5, 1),\n  exit: cubic-bezier(.5, 0, 1, .5),\n  move: cubic-bezier(.5, 0, .5, 1)\n);\n\n/* ==================== */\n/* == Spacings\n/* ==================== */\n\n$full-width: false !default;\n$base: 1140 / 16 !default;\n$width: em( 980 ) !default;\n$gutter: rem( 16 ) !default;\n\n\n/* ==================== */\n/* == Patterns\n/* ==================== */\n\n$patterns: (\n  \"checkers\": \"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='8' height='8' viewBox='0 0 8 8'%3E%3Cg fill='%23ffffff99'%3E%3Cpath fill-rule='evenodd' d='M0 0h4v4H0V0zm4 4h4v4H4V4z'/%3E%3C/g%3E%3C/svg%3E\",\n  \"triangles\": \"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='12' height='24' viewBox='0 0 36 72'%3E%3Cg fill-rule='evenodd'%3E%3Cg fill='%23ffffff99'%3E%3Cpath d='M2 6h12L8 18 2 6zm18 36h12l-6 12-6-12z'/%3E%3C/g%3E%3C/g%3E%3C/svg%3E\",\n  \"hexagons\": \"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='14' height='24' viewBox='0 0 28 49'%3E%3Cg fill-rule='evenodd'%3E%3Cg id='hexagons' fill='%23ffffff99' fill-rule='nonzero'%3E%3Cpath d='M13.99 9.25l13 7.5v15l-13 7.5L1 31.75v-15l12.99-7.5zM3 17.9v12.7l10.99 6.34 11-6.35V17.9l-11-6.34L3 17.9zM0 15l12.98-7.5V0h-2v6.35L0 12.69v2.3zm0 18.5L12.98 41v8h-2v-6.85L0 35.81v-2.3zM15 0v7.5L27.99 15H28v-2.31h-.01L17 6.35V0h-2zm0 49v-8l12.99-7.5H28v2.31h-.01L17 42.15V49h-2z'/%3E%3C/g%3E%3C/g%3E%3C/svg%3E\",\n  \"zig\": \"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='20' height='12' viewBox='0 0 20 12'%3E%3Cg fill-rule='evenodd'%3E%3Cg id='charlie-brown' fill='%23ffffff99'%3E%3Cpath d='M9.8 12L0 2.2V.8l10 10 10-10v1.4L10.2 12h-.4zm-4 0L0 6.2V4.8L7.2 12H5.8zm8.4 0L20 6.2V4.8L12.8 12h1.4zM9.8 0l.2.2.2-.2h-.4zm-4 0L10 4.2 14.2 0h-1.4L10 2.8 7.2 0H5.8z'/%3E%3C/g%3E%3C/g%3E%3C/svg%3E\",\n  \"stripes\": \"data:image/svg+xml,%3Csvg width='6' height='6' viewBox='0 0 6 6' xmlns='http://www.w3.org/2000/svg'%3E%3Cg fill='%23ffffff99' fill-rule='evenodd'%3E%3Cpath d='M5 0h1L0 6V5zM6 5v1H5z'/%3E%3C/g%3E%3C/svg%3E\",\n  \"dots\": \"data:image/svg+xml,%3Csvg width='10' height='10' viewBox='0 0 20 20' xmlns='http://www.w3.org/2000/svg'%3E%3Cg fill='%23ffffff99' fill-rule='evenodd'%3E%3Ccircle cx='3' cy='3' r='3'/%3E%3Ccircle cx='13' cy='13' r='3'/%3E%3C/g%3E%3C/svg%3E\"\n);\n\n\n/* ==================== */\n/* == Formage\n/* ==================== */\n\n$form-is-normalize: true;\n$form-is-box-sizing: true;\n$form-is-visually-hidden: true;\n\n$form-input-padding: em( 8 );\n$form-input-width: 400;\n$form-input-background: palette( default, secondary );\n\n$form-border-radius: em( 4 );\n$form-border-color: palette( dominant, dark );\n$form-border-shadow: palette( dominant, dark );\n\n$form-button-background: palette( dominant, dark );\n$form-button-border: palette( dominant, dark );\n$form-button-color: palette( dominant, contrast );\n\n$form-screen-small: 768;\n\n$form-placeholder: palette( muted, light );\n\n$form-help: palette( default );\n$form-error: palette( alert, dark );\n$form-valid: palette( success );\n","// ----------------------------- */\n// == Functions\n// ----------------------------- */\n\n// em conversion\n// @note Found in Marie Guillaumet's Gists\n// @author Marie Guillaumet\n// @see https://twitter.com/kReEsTaL\n// @see http://marieguillaumet.com/\n// @see https://gist.github.com/ijy/1441967\n@function em( $f, $base: 16 ) {\n  $everything-okay: true;\n\n  @if type-of( $f ) != number {\n    @warn \"Biip ! `{$s}` is not a valid number.\";\n    $everything-okay: false;\n  }\n\n  @if $everything-okay == true {\n    @if $f == 0 { @return 0 }\n    @return $f / $base * 1em;\n  }\n}\n\n// rem conversion\n@function rem( $f, $base: 16 ) {\n  $everything-okay: true;\n\n  @if type-of( $f ) != number {\n    @warn \"Biip ! `{$s}` is not a valid number.\";\n    $everything-okay: false;\n  }\n\n  @if $everything-okay == true {\n    @if $f == 0 { @return 0 }\n    @return $f / $base * 1rem;\n  }\n}\n\n\n// Color palette\n// @note Allow to pick a color in defined color palette\n// @author Tom Davies\n// @see http://erskinedesign.com/blog/friendlier-colour-names-sass-maps/\n@function palette( $color, $tone: \"base\" ) {\n  @if ( map-has-key( $colors, $color ) ) {\n    @if ( map-has-key( map-get( $colors, $color ), $tone ) ) {\n      @return map-get( map-get( $colors, $color ), $tone );\n    } @else {\n      @error \"Biip ! `#{$tone}` is not a valid `#{$color}`'s variants.\";\n    }\n  } @else {\n    @error \"Biip ! `#{$color}` is not part of our palette…\";\n  }\n}\n\n\n// Replace `$search` with `$replace` in `$string`\n// @author Hugo Giraudel\n// @param {String} $string - Initial string\n// @param {String} $search - Substring to replace\n// @param {String} $replace ('') - New value\n// @return {String} - Updated string\n// @see https://www.sassmeister.com/gist/1b4f2da5527830088e4d\n@function str-replace($string, $search, $replace: '') {\n  $index: str-index($string, $search);\n  \n  @if $index {\n    @return str-slice($string, 1, $index - 1) + $replace + str-replace(str-slice($string, $index + str-length($search)), $search, $replace);\n  }\n  \n  @return $string;\n}\n\n\n// Convert value to string\n// @author Hugo Giraudel\n// @see https://hugogiraudel.com/2014/01/27/casting-types-in-sass/\n@function to-string($value) {\n  @return inspect($value);\n}\n","/* ==================== */\n/* == sseeeedd\n/* ==================== */\n@import \"sseeeedd-func\";\n@import \"sseeeedd-vars\";\n@import \"switch\";\n\n.pl-5 {\n  padding-left: 5rem;\n}\n\n.fieldset {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.illustration[role=\"group\"] {\n  margin: $gutter * 3 auto;\n  max-width: min-content;\n  \n  img {\n    max-width: none;\n  }\n}\n\nbody > :not(.modeplan) .slide {\n    overflow: hidden !important;\n    \n    &[id=\"white-slide\"] {\n      background: palette( default, contrast );\n    }\n}\n\n/* ==================== */\n/* == Tables\n/* ==================== */\n\ntable {\n  font-size: 1rem;\n  margin: auto;\n}\n\npre[class*=\"language-\"] {\n    overflow-y: hidden;\n}\n\npre code[class*=\"language-\"] {\n  font-size: 1.25rem;\n}\n\n.table-ffoodd {\n  background: palette( default, contrast );\n  border-collapse: collapse;\n  caption-side: top;\n  font-feature-settings: \"tnum\";\n  width: 100%;\n  vertical-align: top;\n\n  > caption:first-child {\n    font-style: italic;\n    margin: 0;\n    padding: rem( 40 ) $gutter;\n  }\n  \n  th,\n  td {\n    padding: $gutter / 2 rem( 12 );\n    text-align: left;\n\n    thead &,\n    tbody & {\n      border-bottom: 1px solid palette( default, secondary );\n    }\n  }\n\n  th,\n  table strong {\n    color: palette( dominant, dark );\n  }\n\n  td {\n    line-height: 1.25;\n    max-width: 100%;\n  }\n\n  tbody {\n    border: 1px solid palette( default, secondary );\n  }\n}\n\n/* ==================== */\n/* == Charts\n/* ==================== */\n\n[class*=\"charts\"] {\n  dd[role=\"presentation\"] {\n    display: none;\n  }\n\n  abbr[title] {\n    border-bottom: 0;\n    font-size: small;\n    font-weight: normal;\n    text-transform: none;\n  }\n}\n\n/* ==================== */\n/* == Table based Charts\n/* ==================== */\n\n.table-charts {\n  caption-side: bottom;\n  contain: content;\n  empty-cells: hide;\n  margin: 1.5em auto;\n  overflow: hidden;\n  padding: 1em;\n\n  > caption:first-child {\n    background: inherit;\n    font-style: normal;\n    padding: $gutter 0;\n  }\n}\n\n@media screen and (min-width: em(480)) {\n  .table-charts {\n    border-collapse: separate;\n    border-spacing: 0;\n\n    th,\n    td {\n      border: 0;\n      padding: 0;\n\n      &:empty {\n        display: none;\n      }\n    }\n\n    /** Bar charts */\n    @supports (grid-template-columns: repeat(var(--scale, 100), minmax(0, 1fr))) {\n      &.bar {\n        \n        &.step-1 {\n          caption {\n            text-align: initial;\n            text-indent: em( 256 );\n          }\n          \n          tbody tr {\n            display: grid;\n            grid-auto-rows: 1fr;\n            grid-row-gap: $gutter / 2;\n            grid-template-columns: minmax(min-content, em( 240 )) repeat(var(--scale, 100), minmax(0, 1fr)) 10ch;\n            transition: opacity .2s map-get( $timing-functions, 'move' );\n\n            th {\n              grid-column: 1 / 1;\n              margin: $gutter / 2 0 0;\n              padding: 0 $gutter 0 0;\n              text-align: right;\n            }\n            \n            td {\n              background: currentColor;\n              grid-column: 2 / var(--value, 0);\n              margin: $gutter / 2 0 0;\n              position: relative;\n            }\n          }\n        }\n          \n        &.step-2 {\n          tbody tr td span {\n            background: inherit;\n            -webkit-text-fill-color: transparent;\n            -webkit-background-clip: text;\n            font-weight: bold;\n            left: 100%;\n            position: absolute;\n          }\n        }\n        \n        &.step-3 {\n          tbody tr {\n            td {\n              --size: calc(var(--scale, 100) * 100%);\n              --position: calc(var(--value, 0) / var(--scale, 100) * 100%);\n              background-blend-mode: hard-light;\n              background-color: transparent;\n              background-position: var(--position) 0%, center;\n              background-size:  var(--size) 100%, contain;\n            }\n            \n            @each $name, $pattern in $patterns {\n              $i: index($patterns, ($name $pattern));\n\n              &:nth-child(#{$i}n + #{$i}) td {\n                background-image:\n                  linear-gradient(to right,\n                    palette( success, dark ),\n                    palette( dominant ),\n                    palette( secondary ),\n                    palette( accent ),\n                    palette( alert )\n                  ),\n                  url($pattern); /* 1 */\n              }\n            }\n          }\n        }\n\n        &.step-4 {\n          &:hover {\n            tr {\n              opacity: .5;\n            }\n\n            tr:hover {\n              opacity: 1;\n            }\n          }\n\n          /**\n           * @note Custom color palette for WHCM\n           * @note Inspired by Greg Whitworth's post\n           * @link http://www.gwhitworth.com/blog/2017/04/how-to-use-ms-high-contrast\n           */\n          @media screen and (-ms-high-contrast: active) {\n            @each $name, $pattern in $patterns {\n              $i: index($patterns, ($name $pattern));\n\n              &:nth-child(#{$i}n + #{$i}) td {\n                background-image:\n                  linear-gradient(to right,\n                    Window,\n                    ButtonFace,\n                    ButtonShadow,\n                    ButtonText,\n                    highlight\n                  ),\n                  url($pattern);\n              }\n            }\n          }\n            \n          &.waterfall {\n            @each $number in 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11 {\n              tr:nth-of-type(#{$number}) td {\n                grid-column: var(--#{$number - 1}, 0) / var(--value, 0);\n              }\n            }\n          }\n        }\n      }\n    }\n\n    /** Line charts\n     * @note 1. calc() in width doesn't work in Firefox…\n     */\n    @supports (clip-path: polygon(0% calc(100% - (var(--1) * 100% / var(--y))))) {\n      &.line {\n        --offset: calc((100% / var(--x)) / 2);\n        position: relative;\n        transition:\n          background .3s map-get( $timing-functions, 'move' ),\n          color .3s map-get( $timing-functions, 'move' );\n\n        &::after,\n        &::before {\n          bottom: $gutter * 8;\n          content: \"\";\n          position: absolute;\n          top: 0;\n          width: 100%;\n        }\n        \n        th,\n        td {\n          font-weight: bold;\n          text-align: center;\n          width: calc( 100% / var(--x) );\n          width: 8.3%; /* 1 */\n\n          &:hover {\n            color: palette( secondary );\n          }\n        }\n\n        &.step-1 {\n            padding: calc(#{$width / 2} - #{$gutter * 2}) 0 $gutter;\n        \n            &::after {\n              --scale: calc(100% / var(--y));\n              background: repeating-linear-gradient(to bottom, white, white var(--scale), rgba(0, 0, 0, .25) calc(var(--scale) + #{$gutter / 8}));\n              z-index: 1;\n            }\n        }\n\n        &.step-2 {\n            &::before {\n              background: linear-gradient(to top, palette( secondary, light ), palette( alert ) 75%);\n              clip-path: polygon(\n                0% calc(100% - (var(--1) / var(--y) * 100%)),\n                var(--offset) calc(100% - (var(--1) / var(--y) * 100%)),\n                calc((100% / var(--x) * 1) + var(--offset)) calc(100% - (var(--2) / var(--y) * 100%)),\n                calc((100% / var(--x) * 2) + var(--offset)) calc(100% - (var(--3) / var(--y) * 100%)),\n                calc((100% / var(--x) * 3) + var(--offset)) calc(100% - (var(--4) / var(--y) * 100%)),\n                calc((100% / var(--x) * 4) + var(--offset)) calc(100% - (var(--5) / var(--y) * 100%)),\n                calc((100% / var(--x) * 5) + var(--offset)) calc(100% - (var(--6) / var(--y) * 100%)),\n                calc((100% / var(--x) * 6) + var(--offset)) calc(100% - (var(--7) / var(--y) * 100%)),\n                calc((100% / var(--x) * 7) + var(--offset)) calc(100% - (var(--8) / var(--y) * 100%)),\n                calc((100% / var(--x) * 8) + var(--offset)) calc(100% - (var(--9) / var(--y) * 100%)),\n                calc((100% / var(--x) * 9) + var(--offset)) calc(100% - (var(--10) / var(--y) * 100%)),\n                calc((100% / var(--x) * 10) + var(--offset)) calc(100% - (var(--11) / var(--y) * 100%)),\n                calc((100% / var(--x) * 11) + var(--offset)) calc(100% - (var(--12) / var(--y) * 100%)),\n                100% calc(100% - (var(--12) / var(--y) * 100%)),\n                100% 100%,\n                0% 100%\n              );\n              z-index: 2;\n            }\n\n            th {\n              &::after {\n                background-color: palette( default, contrast );\n                background-image: url( map-get( $patterns, 'stripes' ) );\n                background-blend-mode: exclusion;\n                bottom: $gutter * 4;\n                content: \"\";\n                height: calc(100% - #{$gutter * 4});\n                mix-blend-mode: soft-light;\n                opacity: 0;\n                position: absolute;\n                transition: opacity .3s map-get( $timing-functions, 'move' );\n                width: inherit;\n                z-index: 3;\n              }\n\n              @each $number in 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12 {\n                &:nth-child(#{$number + 1})::after {\n                  left: calc(100% / var(--x) * #{$number - 1});\n                }\n              }\n\n              &:hover::after {\n                opacity: .75;\n              }\n            }\n        }\n\n        &.points {\n            &::before {\n              clip-path: polygon(\n                0% calc(100% - (var(--1) / var(--y) * 100%)),\n                var(--offset) calc(100% - (var(--1) / var(--y) * 100%)),\n                calc((100% / var(--x) * 1) + var(--offset)) calc(100% - (var(--2) / var(--y) * 100%)),\n                calc((100% / var(--x) * 2) + var(--offset)) calc(100% - (var(--3) / var(--y) * 100%)),\n                calc((100% / var(--x) * 3) + var(--offset)) calc(100% - (var(--4) / var(--y) * 100%)),\n                calc((100% / var(--x) * 4) + var(--offset)) calc(100% - (var(--5) / var(--y) * 100%)),\n                calc((100% / var(--x) * 5) + var(--offset)) calc(100% - (var(--6) / var(--y) * 100%)),\n                calc((100% / var(--x) * 6) + var(--offset)) calc(100% - (var(--7) / var(--y) * 100%)),\n                calc((100% / var(--x) * 7) + var(--offset)) calc(100% - (var(--8) / var(--y) * 100%)),\n                calc((100% / var(--x) * 8) + var(--offset)) calc(100% - (var(--9) / var(--y) * 100%)),\n                calc((100% / var(--x) * 9) + var(--offset)) calc(100% - (var(--10) / var(--y) * 100%)),\n                calc((100% / var(--x) * 10) + var(--offset)) calc(100% - (var(--11) / var(--y) * 100%)),\n                calc((100% / var(--x) * 11) + var(--offset)) calc(100% - (var(--12) / var(--y) * 100%)),\n                100% calc(100% - (var(--12) / var(--y) * 100%)),\n                100% calc((100% + #{$gutter / 4}) - (var(--12) / var(--y) * 100%)),\n                calc((100% / var(--x) * 11) + var(--offset)) calc((100% + #{$gutter / 4}) - (var(--12) / var(--y) * 100%)),\n                calc((100% / var(--x) * 10) + var(--offset)) calc((100% + #{$gutter / 4}) - (var(--11) / var(--y) * 100%)),\n                calc((100% / var(--x) * 9) + var(--offset)) calc((100% + #{$gutter / 4}) - (var(--10) / var(--y) * 100%)),\n                calc((100% / var(--x) * 8) + var(--offset)) calc((100% + #{$gutter / 4}) - (var(--9) / var(--y) * 100%)),\n                calc((100% / var(--x) * 7) + var(--offset)) calc((100% + #{$gutter / 4}) - (var(--8) / var(--y) * 100%)),\n                calc((100% / var(--x) * 6) + var(--offset)) calc((100% + #{$gutter / 4}) - (var(--7) / var(--y) * 100%)),\n                calc((100% / var(--x) * 5) + var(--offset)) calc((100% + #{$gutter / 4}) - (var(--6) / var(--y) * 100%)),\n                calc((100% / var(--x) * 4) + var(--offset)) calc((100% + #{$gutter / 4}) - (var(--5) / var(--y) * 100%)),\n                calc((100% / var(--x) * 3) + var(--offset)) calc((100% + #{$gutter / 4}) - (var(--4) / var(--y) * 100%)),\n                calc((100% / var(--x) * 2) + var(--offset)) calc((100% + #{$gutter / 4}) - (var(--3) / var(--y) * 100%)),\n                calc((100% / var(--x) * 1) + var(--offset)) calc((100% + #{$gutter / 4}) - (var(--2) / var(--y) * 100%)),\n                var(--offset) calc((100% + #{$gutter / 4}) - (var(--1) / var(--y) * 100%)),\n                0% calc((100% + #{$gutter / 4}) - (var(--1) / var(--y) * 100%))\n              );\n              z-index: 2;\n            }\n\n            th {\n              &::before {\n                --height: calc(100% - 8rem);\n                --size: #{$gutter};\n                background-image: linear-gradient(to top, palette( secondary, light ), palette( alert ) 50%);\n                background-position-x: 0;\n                background-size: 100% calc(var(--y) * 200%);\n                border: 2px solid palette( default, contrast );\n                border-radius: 50%;\n                box-shadow: 0 0 #{$gutter / 4} rgba(0, 0, 0, .5);\n                content: \"\";\n                height: var(--size);\n                position: absolute;\n                transform: translate3d(calc(var(--size) / -2), calc(var(--size) / -2), 0);\n                transition: transform .3s map-get( $timing-functions, 'move' );\n                width: var(--size);\n                z-index: 4;\n              }\n\n              @each $name, $pattern in $patterns {\n                $i: index($patterns, ($name $pattern));\n\n                tr:nth-child(#{$i}n + #{$i}) th::before,\n                tr:nth-child(#{$i}n + #{$i}) [role=\"presentation\"]::before  {\n                  background-image: url($pattern); /* 1 */\n                }\n              }\n\n              @each $number in 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12 {\n                &:nth-of-type(#{$number + 1})::before {\n                  background-position-y: calc((var(--height) - (var(--#{$number}) / var(--y) * var(--height))));\n                  left: calc((100% / var(--x) * #{$number - 1}) + var(--offset));\n                  top: calc((var(--height) - (var(--#{$number}) / var(--y) * var(--height))));\n                }\n              }\n\n              &::after {\n                mix-blend-mode: multiply;\n              }\n\n              &:hover {\n                &::before {\n                  transform: translate3d(calc(var(--size) / -2), calc(var(--size) / -2), 0) scale(1.5);\n                }\n\n                &::after {\n                  opacity: .5;\n                }\n              }\n            }\n          }\n        }\n      \n\n      /**\n       * @note Custom color palette for WHCM\n       * @note Inspired by Greg Whitworth's post\n       * @link http://www.gwhitworth.com/blog/2017/04/how-to-use-ms-high-contrast\n       */\n      @media screen and (-ms-high-contrast: active) {\n        &.line::before {\n          background: linear-gradient(to top, ButtonHighlight, Highlight 75%);\n        }\n      }\n    }\n\n    /** Pie charts */\n    @supports (--position: calc(var(--start, 0) * .01turn)) {\n      &.pie {\n        margin: 0 auto;\n        position: relative;\n        \n        &.step-1 {\n            tbody {\n              display: table-row;\n            }\n\n            tbody tr {\n              display: table-cell;\n            }\n            \n            tbody th {\n              padding-right: $gutter / 2;\n\n              &::before {\n                background: var(--color, currentColor);\n                content: \"\";\n                display: inline-block;\n                height: 1rem;\n                transform: translate3d(-.2rem, .1rem, 0);\n                width: 1rem;\n              }\n            }\n            \n            @each $name, $pattern in $patterns {\n              $i: index($patterns, ($name $pattern));\n\n              tr:nth-child(#{$i}n + #{$i}) th::before,\n              tr:nth-child(#{$i}n + #{$i}) [role=\"presentation\"]::before  {\n                background-image: url($pattern); /* 1 */\n              }\n            }\n        }\n\n        &.step-2 {\n            padding-top: calc(#{$width / 2} - #{$gutter * 2});\n          \n            /**\n             * @note Pie chart based on:\n             * @link https://www.smashingmagazine.com/2015/07/designing-simple-pie-charts-with-css/\n             * @author Lea Verou\n             */\n            [role=\"presentation\"] {\n              --position: calc(var(--start, 0) * .01turn);\n              --zoom: .75;\n              clip-path: circle(50% at 0% 50%);\n              display: block;\n              height: 100%;\n              left: 50%;\n              overflow: hidden;\n              pointer-events: none;\n              position: absolute;\n              top: $gutter * -4;\n              transform:\n                rotate(var(--position))\n                scale(var(--zoom));\n              transform-origin: left center;\n              transition: transform .2s map-get( $timing-functions, 'move' );\n              width: $width / 2;\n\n              &::before {\n                --position: calc(var(--value, 0) * .01turn + 1deg);\n                background-color: var(--color, currentColor);\n                content: \"\";\n                display: initial;\n                height: 100%;\n                left: -100%;\n                margin: initial;\n                pointer-events: auto;\n                position: inherit;\n                top: 0;\n                transform: rotate(var(--position));\n                transform-origin: right center;\n                width: 100%;\n              }\n            }\n\n            tr:hover [role=\"presentation\"] {\n              --zoom: .8;\n            }\n        }\n        \n         /**\n           * Using mask-image to make a Donut\n           *\n           * @note Based on Ana Tudor's work\n           * @link https://css-tricks.com/1-html-element-5-css-properties-magic/\n           * @author Ana Tudor\n           *\n           * @note Mask support:\n           * @link https://caniuse.com/#search=mask\n           */\n          @supports (mask: var(--mask)) {\n               &.donut {\n                 mask-image: radial-gradient(\n                   circle at 50% calc(50% - #{$gutter * 2.5}),\n                   transparent 0%,\n                   transparent var(--offset),\n                   palette( default, contrast) calc(var(--offset) + 1px),\n                   palette( default, contrast) 100%\n                 );\n               }\n           }\n      }\n\n      /**\n       * @note Custom color palette for WHCM\n       * @note Inspired by Greg Whitworth's post\n       * @link http://www.gwhitworth.com/blog/2017/04/how-to-use-ms-high-contrast\n       */\n      @media screen and (-ms-high-contrast: active) {\n        &.pie {\n          th::before,\n          [role=\"presentation\"]::before {\n            background-color: Window;\n          }\n\n          tr:nth-of-type(odd) th::before,\n          tr:nth-of-type(odd) [role=\"presentation\"]::before {\n            background-color: WindowText;\n          }\n        }\n      }\n    }\n  }\n\n\n    /* ==================== */\n    /* == Radar Charts\n    /* ==================== */\n    figure[role=\"group\"] {\n        background: white;\n        display: block;\n        margin: 0 auto;\n        overflow: hidden;\n        padding: 1rem;\n        \n        figcaption {\n            display: block;\n            padding: 1rem 0;\n        }\n    }\n\n    .slide {\n        dl,\n        dd {\n          font-size: 1rem;\n          margin: 0 auto;\n        }\n\n        dd + dt {\n          margin: $gutter 0 0;\n        }\n\n        dt dfn {\n          font-style: normal;\n        }\n\n        figure {\n          text-align: left;\n            \n          dt {\n            clear: left;\n            float: left;\n            margin: 0 0 $gutter;\n          }\n\n          dd {\n            display: flex;\n            margin: 0 0 $gutter;\n              \n            &::before {\n                border-top: 1px dotted;\n                content: \"\";\n                flex: 1;\n                margin: 0 .5rem;\n                transform: translateY(.9rem);\n            }\n              \n            &::after {\n                color: palette( muted );\n                content: \"\\A0/\\A0\" attr(data-scale);\n            }\n          }\n\n          dl + figcaption {\n            font-size: 1rem;\n            text-align: center;\n          }\n        }   \n    }\n\n    @supports(clip-path: polygon(calc( 0% 0%, 100% - ( var(--1) * 100% / var(--scale) ) ) 100%, 100% 100%)) {\n    .charts-radar {\n      --radius: #{$width / 6};\n      --size: calc( var(--radius) / var(--scale) );\n      --part: calc( 360deg / var(--items) );\n      background-image:\n        repeating-radial-gradient(\n          circle at 50%,\n          rgba(0, 0, 0, .2),\n          rgba(0, 0, 0, .2) 2px,\n          transparent 2px,\n          transparent calc(var(--size) * var(--step))\n        ),\n        repeating-radial-gradient(\n          circle at 50%,\n          rgba(0, 0, 0, .1),\n          rgba(0, 0, 0, .1) 2px,\n          transparent 2px,\n          transparent var(--size)\n        );\n      border: 2px solid;\n      border-radius: 50%;\n      height: calc( var(--radius) * 2 );\n      margin: 0 auto $gutter * 6 !important;\n      position: relative;\n      width: calc( var(--radius) * 2 );\n        \n        dd {\n          &::after,\n          &::before {\n              display: none;\n          }\n        }\n\n        &.step-1 {\n            margin: $gutter * 6 auto !important;\n          /**\n           * Placing items around a circle based on:\n           * @link https://stackoverflow.com/questions/12813573/position-icons-into-circle\n           * @link http://dabblet.com/gist/3866686\n           * @author Ana Tudor\n           *\n           * @note Negative values for radius helps to start at the top left corner\n           */\n          dt {\n            --away: calc( (var(--radius) * -1) - 50% );\n            left: 50%;\n            margin: initial;\n            padding: 0 $gutter;\n            position: absolute;\n            top: 50%;\n            transform:\n              translate3d(-50%, -50%, 0)\n              rotate( calc(var(--part) * var(--index, 1)) )\n              translate( var(--away) )\n              rotate( calc(var(--part) * var(--index, 1) * -1) );\n\n            &::after {\n              content: attr(data-value) \"\\A0/\\A0\" attr(data-scale);\n              color: palette( accent );\n              display: block;\n              font-size: small;\n              font-weight: 400;\n            }\n\n            @each $number in 1, 2, 3, 4, 5, 6, 7 {\n              &:nth-of-type(#{$number}) {\n                --index: #{$number};\n              }\n            }\n          }\n            \n            dd {\n                color: transparent;\n            }\n        }\n            \n        &.step-2 {\n            dd {\n                color: inherit;\n                height: 50%;\n                left: 0;\n                margin: initial;\n                position: absolute;\n                top: 0;\n                width: 50%;\n                \n              span {\n                  background: linear-gradient(\n                    to top left,\n                    palette( accent, light ) 10%,\n                    palette( secondary, dark ) 75%\n                  );\n                  filter: drop-shadow( 0 0 $gutter palette( accent, dark ) );\n                  height: 100%;\n                  position: absolute;\n                  width: 100%;\n              }\n              \n              @each $number in 1, 2, 3, 4, 5, 6, 7 {\n                  &:nth-of-type(#{$number}) {\n                    --index: #{$number};\n\n                    span {\n                      --pos: calc( 100% - (var(--#{$number + 1}) * 100% / (var(--scale) ) ) );\n                      clip-path: polygon(\n                        100% var(--pos),\n                        calc( 100% - ( var(--#{$number}) * 100% / var(--scale) ) ) 100%,\n                        100% 100%\n                      );\n                  }\n                }\n          }\n        }\n        \n            }\n        \n        &.step-3 {\n          /**\n           * This is quite sophisticated, we're mixing multiple techniques\n           *\n           * @note Setting items as parts of the circle:\n           * @link https://tympanus.net/codrops/2013/08/09/building-a-circular-navigation-with-css-transforms/\n           * @author Sara Soueidan\n           *\n           * @note Because we skew items, clip-path() needs to take skew angle into account\n           * @note To do so, we need to know skewed width (which is hypothenuse of the resulting triangle)\n           * @note We only know two angles (skew one + suqare one) and a side (initial width),\n           * @note So we need to compute the sinus of the opposite angle to get hypothenuse\n           * @note Thanks god, Stereokai made trigonometry functions in pure CSS:\n           *\n           * @note Trigonometry functions based on:\n           * @link https://gist.github.com/stereokai/7666bfe93929b14c2dced148c79e0e97\n           * @author Stereokai\n           */\n          dd {\n            --skew: calc( 90deg - var(--part) );\n            border-bottom: 1px solid palette( accent, light );\n            transform:\n              rotate( calc(var(--part) * var(--index, 1)) )\n              skew( var(--skew) );\n            transform-origin: 100% 100%;\n          }\n        }\n\n        &.step-4 dd {\n            --unitless-radius: calc( 980 / 16 / 6 );\n            \n            span {\n              --opposite: calc( 180 - (90 + (90 - (360 / var(--items)))) );\n              // get opposite angle in radians\n              --angle: calc( var(--opposite) * 0.01745329251 );\n              // calc() sin, dark wizardry!\n              --sin-term1: var(--angle);\n              --sin-term2: calc((var(--angle) * var(--angle) * var(--angle)) / 6);\n              --sin-term3: calc((var(--angle) * var(--angle) * var(--angle) * var(--angle) * var(--angle)) / 120);\n              --sin-term4: calc((var(--angle) * var(--angle) * var(--angle) * var(--angle) * var(--angle) * var(--angle) * var(--angle)) / 5040);\n              --sin-term5: calc((var(--angle) * var(--angle) * var(--angle) * var(--angle) * var(--angle) * var(--angle) * var(--angle) * var(--angle) * var(--angle)) / 362880);\n              --sin: calc(var(--sin-term1) - var(--sin-term2) + var(--sin-term3) - var(--sin-term4) + var(--sin-term5));\n              // calc() hypothenuse\n              --hypo: calc( var(--unitless-radius) / var(--sin) );\n              // get the ratio: skewed / initial width\n              --ratio: calc( var(--hypo) / var(--unitless-radius) );\n            }\n\n            @each $number in 1, 2, 3, 4, 5, 6, 7 {\n              &:nth-of-type(#{$number}) {\n                --index: #{$number};\n\n                span {\n                  --pos: calc( 100% - (var(--#{$number + 1}) * 100% / (var(--scale) * var(--ratio) ) ) );\n                  clip-path: polygon(\n                    100% var(--pos),\n                    calc( 100% - ( var(--#{$number}) * 100% / var(--scale) ) ) 100%,\n                    100% 100%\n                  );\n                }\n              }\n            }\n        }\n      }\n    }\n\n}\n"]}