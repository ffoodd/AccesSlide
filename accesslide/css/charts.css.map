{"version":3,"sources":["charts.scss","_sseeeedd-func.scss","_sseeeedd-vars.scss"],"names":[],"mappings":"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","file":"charts.css","sourcesContent":["/* ==================== */\n/* == sseeeedd\n/* ==================== */\n@import \"sseeeedd-func\";\n@import \"sseeeedd-vars\";\n\n.pl-5 {\n  padding-left: 5rem;\n}\n\n/* ==================== */\n/* == Tables\n/* ==================== */\n\ntable {\n  font-size: 1.25rem;\n  margin: auto;\n}\n\npre code[class*=\"language-\"] {\n  font-size: 1.25rem;\n}\n\n.table-ffoodd {\n  background: palette( default, contrast );\n  border-collapse: collapse;\n  caption-side: top;\n  font-feature-settings: \"tnum\";\n  width: 100%;\n  vertical-align: top;\n\n  > caption:first-child {\n    font-style: italic;\n    margin: 0;\n    padding: rem( 40 ) $gutter;\n  }\n  \n  th,\n  td {\n    padding: $gutter / 2 rem( 12 );\n    text-align: left;\n\n    thead &,\n    tbody & {\n      border-bottom: 1px solid palette( default, secondary );\n    }\n  }\n\n  th,\n  table strong {\n    color: palette( dominant, dark );\n  }\n\n  td {\n    line-height: 1.25;\n    max-width: 100%;\n  }\n\n  tbody {\n    border: 1px solid palette( default, secondary );\n  }\n}\n\n/* ==================== */\n/* == Charts\n/* ==================== */\n\n[class*=\"charts\"] {\n  dd[role=\"presentation\"] {\n    display: none;\n  }\n\n  abbr[title] {\n    border-bottom: 0;\n    font-size: small;\n    font-weight: normal;\n    text-transform: none;\n  }\n}\n\n/* ==================== */\n/* == Table based Charts\n/* ==================== */\n\n.table-charts {\n  caption-side: bottom;\n  empty-cells: hide;\n  margin: 1.5em auto;\n  overflow: hidden;\n  padding: 1em;\n\n  > caption:first-child {\n    background: inherit;\n    font-style: normal;\n    padding: $gutter 0;\n  }\n}\n\n@media screen and (min-width: em(480)) {\n  .table-charts {\n    border-collapse: separate;\n    border-spacing: 0;\n\n    th,\n    td {\n      border: 0;\n      padding: 0;\n\n      &:empty {\n        display: none;\n      }\n    }\n\n    /** Bar charts */\n    @supports (grid-template-columns: repeat(var(--scale, 100), minmax(0, 1fr))) {\n      &.bar {\n        \n        &.step-1 {\n          caption {\n            text-align: initial;\n            text-indent: em( 256 );\n          }\n          \n          tbody tr {\n            display: grid;\n            grid-auto-rows: 1fr;\n            grid-row-gap: $gutter / 2;\n            grid-template-columns: minmax(min-content, em( 240 )) repeat(var(--scale, 100), minmax(0, 1fr)) 10ch;\n            transition: opacity .2s map-get( $timing-functions, 'move' );\n\n            th {\n              grid-column: 1 / 1;\n              margin: $gutter / 2 0 0;\n              padding: 0 $gutter 0 0;\n              text-align: right;\n            }\n            \n            td {\n              background: #efeee3;\n              grid-column: 2 / var(--value, 0);\n              margin: $gutter / 2 0 0;\n              position: relative;\n            }\n          }\n        }\n        \n        &.step-2 {\n          tbody tr {\n            td {\n              --size: calc(var(--scale, 100) * 100%);\n              --position: calc(var(--value, 0) / var(--scale, 100) * 100%);\n              background-blend-mode: hard-light;\n              background-color: transparent;\n              background-position: var(--position) 0%, center;\n              background-size:  var(--size) 100%, contain;\n            }\n            \n            @each $name, $pattern in $patterns {\n              $i: index($patterns, ($name $pattern));\n\n              &:nth-child(#{$i}n + #{$i}) td {\n                background-image:\n                  linear-gradient(to right,\n                    palette( success, dark ),\n                    palette( dominant ),\n                    palette( secondary ),\n                    palette( accent ),\n                    palette( alert )\n                  ),\n                  url($pattern); /* 1 */\n              }\n            }\n          }\n        }\n\n        &.step-3 {\n          tbody tr td span {\n            background: inherit;\n            -webkit-text-fill-color: transparent;\n            -webkit-background-clip: text;\n            font-weight: bold;\n            left: 100%;\n            position: absolute;\n          }\n        }\n\n        &.step-4 {\n          &:hover {\n            tr {\n              opacity: .5;\n            }\n\n            tr:hover {\n              opacity: 1;\n            }\n          }\n\n          /**\n           * @note Custom color palette for WHCM\n           * @note Inspired by Greg Whitworth's post\n           * @link http://www.gwhitworth.com/blog/2017/04/how-to-use-ms-high-contrast\n           */\n          @media screen and (-ms-high-contrast: active) {\n            @each $name, $pattern in $patterns {\n              $i: index($patterns, ($name $pattern));\n\n              &:nth-child(#{$i}n + #{$i}) td {\n                background-image:\n                  linear-gradient(to right,\n                    Window,\n                    ButtonFace,\n                    ButtonShadow,\n                    ButtonText,\n                    highlight\n                  ),\n                  url($pattern);\n              }\n            }\n          }\n        }\n\n        &.waterfall {\n          @each $number in 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11 {\n            tr:nth-of-type(#{$number}) td {\n              grid-column: var(--#{$number - 1}, 0) / var(--value, 0);\n            }\n          }\n        }\n      }\n    }\n\n    /** Line charts\n     * @note 1. calc() in width doesn't work in Firefoxâ€¦\n     */\n    @supports (clip-path: polygon(0% calc(100% - (var(--1) * 100% / var(--y))))) {\n      &.line {\n        --offset: calc((100% / var(--x)) / 2);\n        padding: calc(#{$width / 2} - #{$gutter * 2}) 0 $gutter;\n        position: relative;\n        transition:\n          background .3s map-get( $timing-functions, 'move' ),\n          color .3s map-get( $timing-functions, 'move' );\n\n        &::after,\n        &::before {\n          bottom: $gutter * 8;\n          content: \"\";\n          position: absolute;\n          top: 0;\n          width: 100%;\n        }\n\n        &::before {\n          background: linear-gradient(to top, palette( secondary, light ), palette( alert ) 75%);\n          clip-path: polygon(\n            0% calc(100% - (var(--1) / var(--y) * 100%)),\n            var(--offset) calc(100% - (var(--1) / var(--y) * 100%)),\n            calc((100% / var(--x) * 1) + var(--offset)) calc(100% - (var(--2) / var(--y) * 100%)),\n            calc((100% / var(--x) * 2) + var(--offset)) calc(100% - (var(--3) / var(--y) * 100%)),\n            calc((100% / var(--x) * 3) + var(--offset)) calc(100% - (var(--4) / var(--y) * 100%)),\n            calc((100% / var(--x) * 4) + var(--offset)) calc(100% - (var(--5) / var(--y) * 100%)),\n            calc((100% / var(--x) * 5) + var(--offset)) calc(100% - (var(--6) / var(--y) * 100%)),\n            calc((100% / var(--x) * 6) + var(--offset)) calc(100% - (var(--7) / var(--y) * 100%)),\n            calc((100% / var(--x) * 7) + var(--offset)) calc(100% - (var(--8) / var(--y) * 100%)),\n            calc((100% / var(--x) * 8) + var(--offset)) calc(100% - (var(--9) / var(--y) * 100%)),\n            calc((100% / var(--x) * 9) + var(--offset)) calc(100% - (var(--10) / var(--y) * 100%)),\n            calc((100% / var(--x) * 10) + var(--offset)) calc(100% - (var(--11) / var(--y) * 100%)),\n            calc((100% / var(--x) * 11) + var(--offset)) calc(100% - (var(--12) / var(--y) * 100%)),\n            100% calc(100% - (var(--12) / var(--y) * 100%)),\n            100% 100%,\n            0% 100%\n          );\n          z-index: 2;\n        }\n\n        &::after {\n          --scale: calc(100% / var(--y));\n          background: repeating-linear-gradient(to bottom, white, white var(--scale), rgba(0, 0, 0, .25) calc(var(--scale) + #{$gutter / 8}));\n          z-index: 1;\n        }\n\n        th,\n        td {\n          font-weight: bold;\n          text-align: center;\n          width: calc( 100% / var(--x) );\n          width: 8.3%; /* 1 */\n\n          &:hover {\n            color: palette( secondary );\n          }\n        }\n\n        th {\n          &::after {\n            background: palette( default, contrast );\n            bottom: $gutter * 4;\n            content: \"\";\n            height: calc(100% - #{$gutter * 4});\n            mix-blend-mode: soft-light;\n            opacity: 0;\n            position: absolute;\n            transition: opacity .3s map-get( $timing-functions, 'move' );\n            width: inherit;\n            z-index: 3;\n          }\n\n          @each $number in 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12 {\n            &:nth-child(#{$number + 1})::after {\n              left: calc(100% / var(--x) * #{$number - 1});\n            }\n          }\n\n          &:hover::after {\n            opacity: .5;\n          }\n        }\n\n        td {\n          line-height: 1.5;\n        }\n\n        abbr[title] {\n          font-weight: normal;\n        }\n\n        &.points {\n            &::before {\n              clip-path: polygon(\n                0% calc(100% - (var(--1) / var(--y) * 100%)),\n                var(--offset) calc(100% - (var(--1) / var(--y) * 100%)),\n                calc((100% / var(--x) * 1) + var(--offset)) calc(100% - (var(--2) / var(--y) * 100%)),\n                calc((100% / var(--x) * 2) + var(--offset)) calc(100% - (var(--3) / var(--y) * 100%)),\n                calc((100% / var(--x) * 3) + var(--offset)) calc(100% - (var(--4) / var(--y) * 100%)),\n                calc((100% / var(--x) * 4) + var(--offset)) calc(100% - (var(--5) / var(--y) * 100%)),\n                calc((100% / var(--x) * 5) + var(--offset)) calc(100% - (var(--6) / var(--y) * 100%)),\n                calc((100% / var(--x) * 6) + var(--offset)) calc(100% - (var(--7) / var(--y) * 100%)),\n                calc((100% / var(--x) * 7) + var(--offset)) calc(100% - (var(--8) / var(--y) * 100%)),\n                calc((100% / var(--x) * 8) + var(--offset)) calc(100% - (var(--9) / var(--y) * 100%)),\n                calc((100% / var(--x) * 9) + var(--offset)) calc(100% - (var(--10) / var(--y) * 100%)),\n                calc((100% / var(--x) * 10) + var(--offset)) calc(100% - (var(--11) / var(--y) * 100%)),\n                calc((100% / var(--x) * 11) + var(--offset)) calc(100% - (var(--12) / var(--y) * 100%)),\n                100% calc(100% - (var(--12) / var(--y) * 100%)),\n                100% calc((100% + #{$gutter / 4}) - (var(--12) / var(--y) * 100%)),\n                calc((100% / var(--x) * 11) + var(--offset)) calc((100% + #{$gutter / 4}) - (var(--12) / var(--y) * 100%)),\n                calc((100% / var(--x) * 10) + var(--offset)) calc((100% + #{$gutter / 4}) - (var(--11) / var(--y) * 100%)),\n                calc((100% / var(--x) * 9) + var(--offset)) calc((100% + #{$gutter / 4}) - (var(--10) / var(--y) * 100%)),\n                calc((100% / var(--x) * 8) + var(--offset)) calc((100% + #{$gutter / 4}) - (var(--9) / var(--y) * 100%)),\n                calc((100% / var(--x) * 7) + var(--offset)) calc((100% + #{$gutter / 4}) - (var(--8) / var(--y) * 100%)),\n                calc((100% / var(--x) * 6) + var(--offset)) calc((100% + #{$gutter / 4}) - (var(--7) / var(--y) * 100%)),\n                calc((100% / var(--x) * 5) + var(--offset)) calc((100% + #{$gutter / 4}) - (var(--6) / var(--y) * 100%)),\n                calc((100% / var(--x) * 4) + var(--offset)) calc((100% + #{$gutter / 4}) - (var(--5) / var(--y) * 100%)),\n                calc((100% / var(--x) * 3) + var(--offset)) calc((100% + #{$gutter / 4}) - (var(--4) / var(--y) * 100%)),\n                calc((100% / var(--x) * 2) + var(--offset)) calc((100% + #{$gutter / 4}) - (var(--3) / var(--y) * 100%)),\n                calc((100% / var(--x) * 1) + var(--offset)) calc((100% + #{$gutter / 4}) - (var(--2) / var(--y) * 100%)),\n                var(--offset) calc((100% + #{$gutter / 4}) - (var(--1) / var(--y) * 100%)),\n                0% calc((100% + #{$gutter / 4}) - (var(--1) / var(--y) * 100%))\n              );\n              z-index: 2;\n            }\n\n            th {\n              &::before {\n                --height: calc(100% - 8rem);\n                --size: #{$gutter};\n                background-image: linear-gradient(to top, palette( secondary, light ), palette( alert ) 50%);\n                background-position-x: 0;\n                background-size: 100% calc(var(--y) * 200%);\n                border: 2px solid palette( default, contrast );\n                border-radius: 50%;\n                box-shadow: 0 0 #{$gutter / 4} rgba(0, 0, 0, .5);\n                content: \"\";\n                height: var(--size);\n                position: absolute;\n                transform: translate3d(calc(var(--size) / -2), calc(var(--size) / -2), 0);\n                transition: transform .3s map-get( $timing-functions, 'move' );\n                width: var(--size);\n                z-index: 4;\n              }\n\n              @each $name, $pattern in $patterns {\n                $i: index($patterns, ($name $pattern));\n\n                tr:nth-child(#{$i}n + #{$i}) th::before,\n                tr:nth-child(#{$i}n + #{$i}) [role=\"presentation\"]::before  {\n                  background-image: url($pattern); /* 1 */\n                }\n              }\n\n              @each $number in 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12 {\n                &:nth-of-type(#{$number + 1})::before {\n                  background-position-y: calc((var(--height) - (var(--#{$number}) / var(--y) * var(--height))));\n                  left: calc((100% / var(--x) * #{$number - 1}) + var(--offset));\n                  top: calc((var(--height) - (var(--#{$number}) / var(--y) * var(--height))));\n                }\n              }\n\n              &::after {\n                mix-blend-mode: difference;\n              }\n\n              &:hover {\n                &::before {\n                  transform: translate3d(calc(var(--size) / -2), calc(var(--size) / -2), 0) scale(1.5);\n                }\n\n                &::after {\n                  opacity: .05;\n                }\n              }\n            }\n          }\n        }\n      }\n\n      /**\n       * @note Custom color palette for WHCM\n       * @note Inspired by Greg Whitworth's post\n       * @link http://www.gwhitworth.com/blog/2017/04/how-to-use-ms-high-contrast\n       */\n      @media screen and (-ms-high-contrast: active) {\n        &.line::before {\n          background: linear-gradient(to top, ButtonHighlight, Highlight 75%);\n        }\n      }\n    }\n\n    /** Pie charts */\n    @supports (--position: calc(var(--start, 0) * .01turn)) {\n      &.pie {\n        margin: 0 auto;\n        padding-top: calc(100% + #{$gutter * 2});\n        position: relative;\n\n        tbody {\n          display: table-row;\n        }\n\n        tbody tr {\n          display: table-cell;\n        }\n\n        tbody th {\n          padding-right: $gutter / 2;\n\n          &::before {\n            background: var(--color, currentColor);\n            content: \"\";\n            display: inline-block;\n            height: 1rem;\n            transform: translate3d(-.2rem, .1rem, 0);\n            width: 1rem;\n          }\n        }\n\n        @media screen and (min-width: em(480)) {\n          padding-top: calc(#{$width / 2} - #{$gutter * 2});\n        }\n\n        /**\n         * @note Pie chart based on:\n         * @link https://www.smashingmagazine.com/2015/07/designing-simple-pie-charts-with-css/\n         * @author Lea Verou\n         */\n        [role=\"presentation\"] {\n          --position: calc(var(--start, 0) * .01turn);\n          --zoom: .75;\n          clip-path: circle(50% at 0% 50%);\n          display: block;\n          height: 100%;\n          left: 50%;\n          overflow: hidden;\n         \tpointer-events: none;\n          position: absolute;\n          top: $gutter * -4;\n          transform:\n            rotate(var(--position))\n            scale(var(--zoom));\n          transform-origin: left center;\n          transition: transform .2s map-get( $timing-functions, 'move' );\n          width: $width / 2;\n\n          &::before {\n            --position: calc(var(--value, 0) * .01turn + 1deg);\n            background-color: var(--color, currentColor);\n            content: \"\";\n            display: initial;\n            height: 100%;\n            left: -100%;\n            margin: initial;\n            pointer-events: auto;\n            position: inherit;\n            top: 0;\n            transform: rotate(var(--position));\n            transform-origin: right center;\n            width: 100%;\n          }\n        }\n\n        tr:hover [role=\"presentation\"] {\n          --zoom: .8;\n        }\n\n        @each $name, $pattern in $patterns {\n          $i: index($patterns, ($name $pattern));\n\n          tr:nth-child(#{$i}n + #{$i}) th::before,\n          tr:nth-child(#{$i}n + #{$i}) [role=\"presentation\"]::before  {\n            background-image: url($pattern); /* 1 */\n          }\n        }\n      }\n\n      /**\n       * Using mask-image to make a Donut\n       *\n       * @note Based on Ana Tudor's work\n       * @link https://css-tricks.com/1-html-element-5-css-properties-magic/\n       * @author Ana Tudor\n       *\n       * @note Mask support:\n       * @link https://caniuse.com/#search=mask\n       */\n      @supports (mask: var(--mask)) {\n         &.donut {\n           mask-image: radial-gradient(\n             circle at 50% calc(50% - #{$gutter * 2}),\n             transparent 0%,\n             transparent calc(var(--offset) / 2),\n             palette( default, contrast) calc(var(--offset) / 2 + 1px),\n             palette( default, contrast) 100%\n           );\n         }\n\n         @media screen and (min-width: em(480)) {\n           &.donut {\n             mask-image: radial-gradient(\n               circle at 50% calc(50% - #{$gutter * 2.5}),\n               transparent 0%,\n               transparent var(--offset),\n               palette( default, contrast) calc(var(--offset) + 1px),\n               palette( default, contrast) 100%\n             );\n           }\n         }\n       }\n\n      /**\n       * @note Custom color palette for WHCM\n       * @note Inspired by Greg Whitworth's post\n       * @link http://www.gwhitworth.com/blog/2017/04/how-to-use-ms-high-contrast\n       */\n      @media screen and (-ms-high-contrast: active) {\n        &.pie {\n          th::before,\n          [role=\"presentation\"]::before {\n            background-color: Window;\n          }\n\n          tr:nth-of-type(odd) th::before,\n          tr:nth-of-type(odd) [role=\"presentation\"]::before {\n            background-color: WindowText;\n          }\n        }\n      }\n    }\n}\n","// ----------------------------- */\n// == Functions\n// ----------------------------- */\n\n// em conversion\n// @note Found in Marie Guillaumet's Gists\n// @author Marie Guillaumet\n// @see https://twitter.com/kReEsTaL\n// @see http://marieguillaumet.com/\n// @see https://gist.github.com/ijy/1441967\n@function em( $f, $base: 16 ) {\n  $everything-okay: true;\n\n  @if type-of( $f ) != number {\n    @warn \"Biip ! `{$s}` is not a valid number.\";\n    $everything-okay: false;\n  }\n\n  @if $everything-okay == true {\n    @if $f == 0 { @return 0 }\n    @return $f / $base * 1em;\n  }\n}\n\n// rem conversion\n@function rem( $f, $base: 16 ) {\n  $everything-okay: true;\n\n  @if type-of( $f ) != number {\n    @warn \"Biip ! `{$s}` is not a valid number.\";\n    $everything-okay: false;\n  }\n\n  @if $everything-okay == true {\n    @if $f == 0 { @return 0 }\n    @return $f / $base * 1rem;\n  }\n}\n\n\n// Color palette\n// @note Allow to pick a color in defined color palette\n// @author Tom Davies\n// @see http://erskinedesign.com/blog/friendlier-colour-names-sass-maps/\n@function palette( $color, $tone: \"base\" ) {\n  @if ( map-has-key( $colors, $color ) ) {\n    @if ( map-has-key( map-get( $colors, $color ), $tone ) ) {\n      @return map-get( map-get( $colors, $color ), $tone );\n    } @else {\n      @error \"Biip ! `#{$tone}` is not a valid `#{$color}`'s variants.\";\n    }\n  } @else {\n    @error \"Biip ! `#{$color}` is not part of our paletteâ€¦\";\n  }\n}\n\n\n// Replace `$search` with `$replace` in `$string`\n// @author Hugo Giraudel\n// @param {String} $string - Initial string\n// @param {String} $search - Substring to replace\n// @param {String} $replace ('') - New value\n// @return {String} - Updated string\n// @see https://www.sassmeister.com/gist/1b4f2da5527830088e4d\n@function str-replace($string, $search, $replace: '') {\n  $index: str-index($string, $search);\n  \n  @if $index {\n    @return str-slice($string, 1, $index - 1) + $replace + str-replace(str-slice($string, $index + str-length($search)), $search, $replace);\n  }\n  \n  @return $string;\n}\n\n\n// Convert value to string\n// @author Hugo Giraudel\n// @see https://hugogiraudel.com/2014/01/27/casting-types-in-sass/\n@function to-string($value) {\n  @return inspect($value);\n}\n","@charset \"UTF-8\";\n/* ----------------------------- */\n/* Table of contents */\n/* ----------------------------- */\n/*\n  == Paths\n  == Colors\n  == Timing functions\n  == Spacings\n  == Patterns\n  == Formage\n*/\n\n\n/* ==================== */\n/* == Paths\n/* ==================== */\n\n$path: \"../\" !default;\n\n\n/* ==================== */\n/* == Colors\n/* ==================== */\n\n$colors: (\n  dominant: (\n    base: #444,\n    light: mediumblue,\n    dark: black,\n    contrast: white\n  ),\n  secondary: (\n    base: mediumblue,\n    light: deepskyblue,\n    dark: DarkBlue,\n    contrast: white\n  ),\n  accent: (\n    base: rebeccapurple,\n    light: blueviolet,\n    dark: indigo,\n    contrast: white\n  ),\n  muted: (\n    base: gray,\n    light: darkgray,\n    contrast: black\n  ),\n  alert: (\n    base: crimson,\n    dark: firebrick,\n    contrast: white\n  ),\n  success: (\n    base: springgreen,\n    light: palegreen,\n    dark: mediumseagreen,\n    contrast: #444\n  ),\n  default: (\n    base: dimgray,\n    secondary: whitesmoke,\n    contrast: white\n  )\n);\n\n$blank: str-replace(to-string(palette( accent )), \"#\", \"%23\");\n$blank-focus: str-replace(to-string(palette( accent, dark )), \"#\", \"%23\");\n\n\n/* ==================== */\n/* == Timing functions\n *\n * @note Simple cubic-bezier curves for timing functions\n * @author David K. Piano\n * @link https://twitter.com/DavidKPiano/status/965704092545900544\n/* ==================== */\n\n$timing-functions: (\n  enter: cubic-bezier(0, .5, .5, 1),\n  exit: cubic-bezier(.5, 0, 1, .5),\n  move: cubic-bezier(.5, 0, .5, 1)\n);\n\n/* ==================== */\n/* == Spacings\n/* ==================== */\n\n$full-width: false !default;\n$base: 1140 / 16 !default;\n$width: em( 1024 ) !default;\n$gutter: rem( 16 ) !default;\n\n\n/* ==================== */\n/* == Patterns\n/* ==================== */\n\n$patterns: (\n  \"checkers\": \"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='8' height='8' viewBox='0 0 8 8'%3E%3Cg fill='%23ffffff99'%3E%3Cpath fill-rule='evenodd' d='M0 0h4v4H0V0zm4 4h4v4H4V4z'/%3E%3C/g%3E%3C/svg%3E\",\n  \"triangles\": \"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='12' height='24' viewBox='0 0 36 72'%3E%3Cg fill-rule='evenodd'%3E%3Cg fill='%23ffffff99'%3E%3Cpath d='M2 6h12L8 18 2 6zm18 36h12l-6 12-6-12z'/%3E%3C/g%3E%3C/g%3E%3C/svg%3E\",\n  \"hexagons\": \"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='14' height='24' viewBox='0 0 28 49'%3E%3Cg fill-rule='evenodd'%3E%3Cg id='hexagons' fill='%23ffffff99' fill-rule='nonzero'%3E%3Cpath d='M13.99 9.25l13 7.5v15l-13 7.5L1 31.75v-15l12.99-7.5zM3 17.9v12.7l10.99 6.34 11-6.35V17.9l-11-6.34L3 17.9zM0 15l12.98-7.5V0h-2v6.35L0 12.69v2.3zm0 18.5L12.98 41v8h-2v-6.85L0 35.81v-2.3zM15 0v7.5L27.99 15H28v-2.31h-.01L17 6.35V0h-2zm0 49v-8l12.99-7.5H28v2.31h-.01L17 42.15V49h-2z'/%3E%3C/g%3E%3C/g%3E%3C/svg%3E\",\n  \"zig\": \"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='20' height='12' viewBox='0 0 20 12'%3E%3Cg fill-rule='evenodd'%3E%3Cg id='charlie-brown' fill='%23ffffff99'%3E%3Cpath d='M9.8 12L0 2.2V.8l10 10 10-10v1.4L10.2 12h-.4zm-4 0L0 6.2V4.8L7.2 12H5.8zm8.4 0L20 6.2V4.8L12.8 12h1.4zM9.8 0l.2.2.2-.2h-.4zm-4 0L10 4.2 14.2 0h-1.4L10 2.8 7.2 0H5.8z'/%3E%3C/g%3E%3C/g%3E%3C/svg%3E\",\n  \"stripes\": \"data:image/svg+xml,%3Csvg width='6' height='6' viewBox='0 0 6 6' xmlns='http://www.w3.org/2000/svg'%3E%3Cg fill='%23ffffff99' fill-rule='evenodd'%3E%3Cpath d='M5 0h1L0 6V5zM6 5v1H5z'/%3E%3C/g%3E%3C/svg%3E\",\n  \"dots\": \"data:image/svg+xml,%3Csvg width='10' height='10' viewBox='0 0 20 20' xmlns='http://www.w3.org/2000/svg'%3E%3Cg fill='%23ffffff99' fill-rule='evenodd'%3E%3Ccircle cx='3' cy='3' r='3'/%3E%3Ccircle cx='13' cy='13' r='3'/%3E%3C/g%3E%3C/svg%3E\"\n);\n\n\n/* ==================== */\n/* == Formage\n/* ==================== */\n\n$form-is-normalize: true;\n$form-is-box-sizing: true;\n$form-is-visually-hidden: true;\n\n$form-input-padding: em( 8 );\n$form-input-width: 400;\n$form-input-background: palette( default, secondary );\n\n$form-border-radius: em( 4 );\n$form-border-color: palette( dominant, dark );\n$form-border-shadow: palette( dominant, dark );\n\n$form-button-background: palette( dominant, dark );\n$form-button-border: palette( dominant, dark );\n$form-button-color: palette( dominant, contrast );\n\n$form-screen-small: 768;\n\n$form-placeholder: palette( muted, light );\n\n$form-help: palette( default );\n$form-error: palette( alert, dark );\n$form-valid: palette( success );\n"]}